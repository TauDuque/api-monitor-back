// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // Otimização de custo: Pool de conexões limitado (max 3)
  // O Prisma gerencia o pool de conexões automaticamente.
  // Para limitar, você pode configurar o `connection_limit` no `DATABASE_URL`
  // ou no momento de instanciar o PrismaClient, dependendo da sua necessidade.
  // Exemplo de DATABASE_URL com limite:
  // DATABASE_URL="postgresql://user:password@localhost:5432/monitoringdb?schema=public&connection_limit=3"
}

model MonitoredURL {
    id                   String              @id @default(uuid())
  url                  String              @unique
  name                 String
  interval             Int                 // Intervalo de verificação em segundos
  active               Boolean             @default(true)
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  checks               URLCheck[]          // Relacionamento com URLCheck
  incidents            Incident[]          // Relacionamento com Incident
  alertConfigurations  AlertConfiguration? // Relacionamento 1-para-1 opcional
}

model URLCheck {
  id            String       @id @default(uuid())
  monitoredUrl  MonitoredURL @relation(fields: [monitoredUrlId], references: [id])
  monitoredUrlId String
  status        Int          // Status HTTP (ex: 200, 404, 500)
  responseTime  Int          // Tempo de resposta em ms
  isOnline      Boolean      // True se o status for 2xx, False caso contrário
  checkedAt     DateTime     @default(now())
  // Opcional: Adicionar mais detalhes como headers, body, etc.
}

model Incident {
  id            String       @id @default(uuid())
  monitoredUrl  MonitoredURL @relation(fields: [monitoredUrlId], references: [id])
  monitoredUrlId String
  type          String       // Tipo de incidente (ex: "DOWN", "SLOW_RESPONSE")
  description   String?      // Descrição detalhada do incidente
  startedAt     DateTime     @default(now())
  resolvedAt    DateTime?
  // Opcional: Adicionar duração, logs, etc.
}

model AlertConfiguration {
  id             String       @id @default(uuid())
  monitoredUrl   MonitoredURL @relation(fields: [monitoredUrlId], references: [id])
  monitoredUrlId String       @unique // Uma configuração por URL
  emailRecipient String?      // Endereço de e-mail para notificação
  webhookUrl     String?      // URL para webhook
  notifyOnDown   Boolean      @default(true)
  notifyOnUp     Boolean      @default(true)
  // Opcional: threshold para tempo de resposta, número de falhas consecutivas, etc.
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
